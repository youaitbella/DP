<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html [<!ENTITY nbsp "&#160;">]>

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:c="http://java.sun.com/jsp/jstl/core">
    <h:outputStylesheet name="css/fileuploader.css"/>
    <h:outputScript name="script/fileuploader.js" />
    <c:if test="#{!editPeppProposal.readOnly}">
        <script>
            var fileCounter = 0;
            function createUploader() {
                var uploader = new qq.FileUploader({
                    element: document.getElementById('file-uploader'),
                    action: '/DataPortal/upload/peppproposal',
                    debug: true,
                    allowedExtensions: [], //['zip', '7z', 'rar', 'gpg', 'pgp'],
                    onSubmit: function (id, fileName) {
                        fileCounter++;
                    },
                    onCancel: function (id, fileName) {
                        fileCounter--;
                        if (fileCounter === 0) {
                        }
                    },
                    onComplete: function (id, fileName, responseJSON) {
                        fileCounter--;
                        if (fileCounter === 0) {
                            document.getElementById("form:takeDocuments").click();
                        }
                    },
                    template: '<div class="qq-uploader">' +
                            '<div class="qq-upload-drop-area"><span>Dateien mittels Ziehen und Ablegen hochladen.</span></div>' +
                            '<div class="qq-upload-button">Datei hochladen</div>' +
                            '<ul class="qq-upload-list"></ul>' +
                            '</div>'
                });
            }
            addOnLoadFunction(createUploader);
        </script>
    </c:if>
    <div class="inputPart">
        <h:panelGroup rendered="#{editPeppProposal.peppProposal.documents.size() > 0}">
            <div class="inputPart"><h:outputLabel styleClass="label" value="#{msg.lblUploadedFiles}:"/></div>
            <h:dataTable  headerClass="list-header" id="tblDropBoxes"
                          value="#{editPeppProposal.peppProposal.documents}" var="file" width="100%" rowClasses="row1, row2" columnClasses="colIcon, colValue">
                <h:column id="colDeleteId" rendered="#{editPeppProposal.peppProposal.status.value == 0}">
                    <f:facet name="header">
                        <h:outputText value=""/>
                    </f:facet>
                    <h:commandLink action="#{editPeppProposal.deleteDocument(file.name)}" immediate="true" >
                        <h:graphicImage alt="#{msg.btnDelete}" name="Icon/small/delete.png" title="#{msg.btnDelete}" value=""/>
                    </h:commandLink>
                </h:column>
                <h:column id="colName">
                    <f:facet name="header">
                        <h:outputText value="#{msg.lblName}"/>
                    </f:facet>
                    <h:commandLink id="filename" value="#{file.name}" action="#{editPeppProposal.downloadDocument(file.name)}" immediate="true" />
                </h:column>
            </h:dataTable>
        </h:panelGroup>

    </div>
    <div class="inputPart">
        <div id="file-uploader">
            <noscript>
                <div class="inputPart">Please enable JavaScript to use the file upload.</div>
                <!-- or put a simple form for upload here -->
            </noscript>
        </div>

        <!-- Invisible button to transfer uploaded documents into peppProposal. Will be "clicked" by code when upload is complete -->
        <h:commandButton id="takeDocuments" value="takeDocuments"
                         style="display: none"
                         action="#{editPeppProposal.takeDocuments}" immediate="true">
        </h:commandButton>

    </div>

    <div class="inputPart">
        <h:outputLabel styleClass="label" for="documentsOffline" value="#{msg.lblDocumentsOffline}:"/>
        <h:message for="documentsOffline" id="msgDocumentsOffline" styleClass="errorMessage"/>
        <br/>
        <h:inputTextarea  styleClass="areaWideHigh" id="documentsOffline"
                          readonly="#{editPeppProposal.readOnly}"
                          value="#{editPeppProposal.peppProposal.documentsOffline}">
            <f:ajax event="blur" render="@this :logout:remaining msgDocumentsOffline anonymousData"/>
        </h:inputTextarea>
    </div>

    <div class="inputPart">
        <h:selectBooleanCheckbox id="anonymousData" value="#{editPeppProposal.anonymousData}"
                                 readonly="#{editPeppProposal.readOnly}"
                                 required="#{editPeppProposal.documentAvailable}" requiredMessage="#{msg.msgValueNeeded}">
            <f:ajax render="@this :logout:remaining msgAnonymousData"/>
        </h:selectBooleanCheckbox>
        <h:outputLabel for="anonymousData" value="#{msg.lblAnonymousData}"/>
        <h:message for="anonymousData" id="msgAnonymousData" styleClass="errorMessage"/>
    </div>

</ui:composition>

