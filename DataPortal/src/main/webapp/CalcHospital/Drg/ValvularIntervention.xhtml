<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html [<!ENTITY nbsp "&#160;">]>

<ui:composition xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:cb="http://inek.org/dataportal/clientbehaviour"
                xmlns:inek="http://xmlns.jcp.org/jsf/composite/components"
                xmlns:calc="http://xmlns.jcp.org/jsf/composite/components/calc"
                xmlns:jsf="http://xmlns.jcp.org/jsf">
        <h:outputStylesheet name="css/fileuploader.css"/>
        <h:outputScript name="script/fileuploader.js"/>
        <script>
            var fileCounter = 0;
            function createUploader() {
                var uploader = new qq.FileUploader({
                    element: document.getElementById('file-uploader'),
                    action: '/DataPortal/upload/calcBasics',
                    debug: true,
                    allowedExtensions: ['png', 'jpg', 'pdf', 'txt', 'odt', 'doc', 'docx', 'odc', 'xls', 'xlsx'],
                    onSubmit: function (id, fileName) {
                        fileCounter++;
                    },
                    onCancel: function (id, fileName) {
                        fileCounter--;
                        if (fileCounter === 0) {
                        }
                    },
                    onComplete: function (id, fileName, responseJSON) {
                        fileCounter--;
                        if (fileCounter === 0) {
                            document.getElementById('form:refresh').click();
                        }
                    },
                    template: '<div class="qq-uploader">' +
                            '<div class="qq-upload-drop-area"><span>Dateien mittels Ziehen und Ablegen hochladen.</span></div>' +
                            '<div class="qq-upload-button">Datei hochladen</div>' +
                            '<ul class="qq-upload-list"></ul>' +
                            '</div>'
                });
            }
        </script>

    <h2 title="#{msg.titleCalcValvularIntervention}">#{msg.headCalcValvularIntervention}</h2>

    <inek:BooleanRadioButton label="#{msg.lblCalcPerformsValvularIntervention}" 
                             value="#{editCalcBasicsDrg.calcBasics.minimalValvularIntervention}"
                             renderElement="@form :logout:remaining">
    </inek:BooleanRadioButton>
    <br/>

    <h:panelGroup id="valvularIntervention" rendered="#{editCalcBasicsDrg.calcBasics.minimalValvularIntervention}">
        <br/>
        <h:outputLabel value="#{msg.lblFulfillmentDemand}" styleClass="label"/>
        <br/>
        <h:selectOneMenu id="fulFillment"
                         required="true"
                         requiredMessage="#{msg.msgValueNeeded}"
                         value="#{editCalcBasicsDrg.calcBasics.mviFulfilled}"
                         hideNoSelectionOption="true" 
                         style="width: 100%;">
            <f:selectItem itemLabel="#{msg.lblChooseEntryShort}" itemValue="#{-1}" noSelectionOption="true"/>
            <f:selectItems value="#{calcBasicsStaticData.mviFulfillmentItems}" var="item" itemLabel="#{item.value}" itemValue="#{item.key}"/>
            <f:ajax event="change" render="@this :logout:remaining msgFulFillment"/>
        </h:selectOneMenu>
        <h:message for="fulFillment" id="msgFulFillment" styleClass="errorMessage"/>

        <inek:BooleanRadioButton label="#{msg.lblFulfillmentNextYear}" 
                                 value="#{editCalcBasicsDrg.calcBasics.mviGuidelineAspired}"
                                 labelStyle="label col45em marginTop"
                                 renderElement=":logout:remaining">
        </inek:BooleanRadioButton>

        <div class="inputPart" jsf:rendered = "#{editCalcBasicsDrg.calcBasics.status.value ge 0 and editCalcBasicsDrg.calcBasics.status.value lt 5}">
            <div id="file-uploader">
                <script>
                    createUploader();
                </script>
            </div>

            <!-- next comes a hidden element to force a JSF conform refresh -->
            <h:commandLink id="refresh" style="display: none" action="#{editCalcBasicsDrg.refresh}" value="refresh"/>
        </div>
        
        <div class="inputPart" jsf:rendered = "#{editCalcBasicsDrg.calcBasics.status.value lt 0}">
            <b>#{msg.msgNubSaveDoc}</b>
        </div>

    </h:panelGroup>
</ui:composition>

